{"version":3,"sources":["App.tsx","components/ListOfGoods/ListOfGoods.tsx","index.tsx"],"names":["SortType","ListOfGoods","goods","map","good","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","onReorder","reorderedGoods","visibleGoods","sort","goodA","goodB","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","prevIsReversed","ReactDOM","render","document","getElementById"],"mappings":"6KAqBKA,E,0ECfQC,EAA+B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC7C,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,SDFnBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAmCE,IAAMM,EAAgB,WAC3B,MAAgCC,mBAASP,EAASQ,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EAAaJ,IAAaT,EAASQ,MAAQG,EAC3CG,EAjCD,SACLZ,EACAO,EACAE,GAGA,IAAMI,EAAY,YAAOb,GAoBzB,OAjBAa,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQT,GACN,KAAKT,EAASmB,QACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKlB,EAASqB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAITX,GACFI,EAAaQ,UAGRR,EAOgBS,CACrBnB,EACAI,EACAE,GAaF,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYlB,IAAaT,EAASmB,UAEtCS,QAnBoB,kBAAMlB,EAAYV,EAASmB,UAajD,iCAWA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYlB,IAAaT,EAASqB,SAEtCO,QA7BmB,kBAAMlB,EAAYV,EAASqB,SAuBhD,4BAWA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAahB,IAEjBiB,QAvCc,kBAAOhB,GAAc,SAAAiB,GAAc,OACtDA,MAgCG,qBAWChB,GACC,wBACEa,KAAK,SACLD,UAAU,4BACVG,QA7CU,WAClBlB,EAAYV,EAASQ,MACrBI,GAAc,IAwCR,sBAUJ,cAAC,EAAD,CACEV,MAAOY,QEzHfgB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7d9346d3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport { ListOfGoods } from './components/ListOfGoods';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  visibleGoods.sort((goodA, goodB) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return goodA.localeCompare(goodB);\n\n      case SortType.LENGTH:\n        return goodA.length - goodB.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n  const onReorder = (sortType !== SortType.NONE || isReversed);\n  const reorderedGoods = getReorderedGoods(\n    goodsFromServer,\n    sortType,\n    isReversed,\n  );\n\n  const handleSortByAlpabet = () => setSortType(SortType.ALPABET);\n  const handleSortByLength = () => setSortType(SortType.LENGTH);\n  const handleReverse = () => (setIsReversed(prevIsReversed => (\n    !prevIsReversed\n  )));\n  const handleReset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPABET },\n          )}\n          onClick={handleSortByAlpabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={handleSortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {onReorder && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ListOfGoods\n        goods={reorderedGoods}\n      />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const ListOfGoods: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <li data-cy=\"Good\" key={good}>{good}</li>\n      ))}\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}